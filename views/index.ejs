
<%- include('./partials/navbar', {title: title}) %>
  

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://fonts.googleapis.com/css2?family=Staatliches&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/index.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
    <link rel="stylesheet" href="/css/alertify.min.css"/>
    <script src="/script/alertify.min.js"></script>
   
</head>
<body>
    <div class="canvas">
        <div class='status-container'>
            <div class="server-status">
                <div class="status">
                    <h1>Server Status: </h1>
                </div>
                <div class="server-status-icon">
                    <% if(server_status == 'ON') { %> 
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24"><path fill="#38b000" d="M6.043 19.496l-1.482 1.505c-2.791-2.201-4.561-5.413-4.561-9.001s1.77-6.8 4.561-9l1.482 1.504c-2.326 1.835-3.804 4.512-3.804 7.496s1.478 5.661 3.804 7.496zm.675-7.496c0-1.791.887-3.397 2.282-4.498l-1.481-1.502c-1.86 1.467-3.04 3.608-3.04 6s1.18 4.533 3.04 6l1.481-1.502c-1.396-1.101-2.282-2.707-2.282-4.498zm15.043 0c0-2.984-1.478-5.661-3.804-7.496l1.482-1.504c2.791 2.2 4.561 5.412 4.561 9s-1.77 6.8-4.561 9.001l-1.482-1.505c2.326-1.835 3.804-4.512 3.804-7.496zm-6.761 4.498l1.481 1.502c1.86-1.467 3.04-3.608 3.04-6s-1.18-4.533-3.04-6l-1.481 1.502c1.396 1.101 2.282 2.707 2.282 4.498s-.886 3.397-2.282 4.498zm-3-7.498c-1.656 0-3 1.343-3 3s1.344 3 3 3 3-1.343 3-3-1.344-3-3-3z"/></svg>
                    <% } else {%> 
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24"><path fill="#db222a" d="M6.043 19.496l-1.482 1.505c-2.791-2.201-4.561-5.413-4.561-9.001s1.77-6.8 4.561-9l1.482 1.504c-2.326 1.835-3.804 4.512-3.804 7.496s1.478 5.661 3.804 7.496zm.675-7.496c0-1.791.887-3.397 2.282-4.498l-1.481-1.502c-1.86 1.467-3.04 3.608-3.04 6s1.18 4.533 3.04 6l1.481-1.502c-1.396-1.101-2.282-2.707-2.282-4.498zm15.043 0c0-2.984-1.478-5.661-3.804-7.496l1.482-1.504c2.791 2.2 4.561 5.412 4.561 9s-1.77 6.8-4.561 9.001l-1.482-1.505c2.326-1.835 3.804-4.512 3.804-7.496zm-6.761 4.498l1.481 1.502c1.86-1.467 3.04-3.608 3.04-6s-1.18-4.533-3.04-6l-1.481 1.502c1.396 1.101 2.282 2.707 2.282 4.498s-.886 3.397-2.282 4.498zm-3-7.498c-1.656 0-3 1.343-3 3s1.344 3 3 3 3-1.343 3-3-1.344-3-3-3z"/></svg>
                    <% } %>
                </div> 
                
                
                <% if(server_status == 'ON') { %> 
                    <div class="btn-container">
                        <form action="/server-stop" method="GET">
                            <button class="noselect" id="stop-btn"><span class='text'>Stop</span><span class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"/></svg></span></button>
                        </form> 
                        </div>
                    <div class="btn-container">
                        <form action="/server-restart" method="GET">
                            <button class="noselect" id="restart-btn"><span class='text'>Restart</span><span class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M13.5 2c-5.629 0-10.212 4.436-10.475 10h-3.025l4.537 5.917 4.463-5.917h-2.975c.26-3.902 3.508-7 7.475-7 4.136 0 7.5 3.364 7.5 7.5s-3.364 7.5-7.5 7.5c-2.381 0-4.502-1.119-5.876-2.854l-1.847 2.449c1.919 2.088 4.664 3.405 7.723 3.405 5.798 0 10.5-4.702 10.5-10.5s-4.702-10.5-10.5-10.5z"/></svg></span></button>
                        </form>
                        </div>
                <% } else {%>
                    <div onclick="start()" class="btn-container">
                        <form action="/server-start" method="GET">
                            <button class="noselect" id="start-btn"><span class='text'>Start</span><span class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M14 12h-4v-12h4v12zm4.213-10.246l-1.213 1.599c2.984 1.732 5 4.955 5 8.647 0 5.514-4.486 10-10 10s-10-4.486-10-10c0-3.692 2.016-6.915 5-8.647l-1.213-1.599c-3.465 2.103-5.787 5.897-5.787 10.246 0 6.627 5.373 12 12 12s12-5.373 12-12c0-4.349-2.322-8.143-5.787-10.246z"/></svg></span></button>
                        </form>
                    </div> <div class="empty-c"></div>
                <% } %>
                <div class="empty-c"></div>
                
                <div class="logged-in-user">
                    <p>Logged in as <%= name %></p>
                </div>
            </div>

            <div class="server-address">
                <h5>Server Address:</h3>
                <p>76.120.79.150:25565</p>
            </div>
            <div class="server-address">
                <h5>Online Players:</h3>
                <p id="current-players"></p>
            </div>
            <div class="ram-usage">
                <canvas id="myChart">

                </canvas>
            </div>
        </div>
    </div>
  

 
    <script>
        const stop = () => { 
            alertify.set('notifier','position', 'top-right');
            var message = 'Server has stopped successfully. This page will refresh automaticaly.';
            alertify.success(message);
            setTimeout(() => {location.reload()}, 3000);
        }
        const restart = () => {
            alertify.set('notifier','position', 'top-right');
            var message = 'Server is Restarting now. Server will be up in about a minute. This page will refresh automaticaly.';
            alertify.success(message);
        }
        
        const start = () => {
            alertify.set('notifier','position', 'top-right');
            var message = 'Server is starting now. Server will be up in about a minute. This page will refresh automaticaly.';
            alertify.success(message);
            setTimeout(() => {location.reload()}, 3000);
        } 

        const renderGraph = (dataArray) => {
            let last24hRamUsage = [];
            // await fetchData()
            //     .then(arr => last24hRamUsage = [...arr]) // copy array
            //     .catch(err => {
            //         // do nothing and let it render old data
            //     })
            const ctx = document.getElementById('myChart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['-23h', '-22h', '-21h', '-20h', '-19h', '-18h', '-17h', '-16h', '-15h', '-14h', '-13h', '-12h', '-11h', '-10h', '-9h', '-8h', '-7h', '-6h', '-5h', '-4h', '-3h', '-2h', '-1h', 'now'],
                    datasets: [{
                        label: 'Past 24 Hours Server RAM Usage',
                        data: dataArray,
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.2)',
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            min: 0,
                            max: 16.0,
                            title: {
                                display: true,
                                text: 'Gigabytes'
                            }
                        }
                    }
                }
            });
        } 
        renderGraph([<%= ramUsage %>]);
        
        const fetchServerInfo = async () => {
            await fetch('https://api.mcsrvstat.us/2/76.120.79.150')
            .then(res => res.json())
            .then(data => {
                console.log(data);
                document.getElementById('current-players').innerText = `${data.players.online} / ${data.players.max}`
            })
        }

        fetchServerInfo();

        </script>
        <!-- https://api.mojang.com/users/profiles/minecraft/xGoofyGoosex? for getting uuid -->
        
 
</body>
</html>